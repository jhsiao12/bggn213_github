---
title: "Class 5: Data Visualization with ggplot"
author: "Jason Hsiao (PID: A15871650)"
format: pdf
---

## Using ggplot

To use ggplot2 we first need to install it on our computers. To do this we will use the function `install.packages()`

```{r Loading Libraries, echo = FALSE}
library(ggplot2) 

```

There is always the "base R" graphics system, i.e. `plot()`
```{r}
plot(cars)
```

To use ggplot I need to spell out at least 3 things:
- data
- aesthetics (aes() values - how the data/vectors map to the plot)
- geoms (how I want things drawn, defined by different independent functions)

## Visualizing 'Cars' Dataset Using ggplot
```{r}
ggplot(cars) +
  aes(x = speed, y = dist) +
  geom_point() + 
  geom_smooth(method = "lm") +
  theme_bw()
  
```

## Analyzing and Visualizing Differential Gene Analysis Data
```{r}
#Importing Data
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)

#Understanding row and columns of genes object
nrow(genes)
ncol(genes)

#Percent of total genes upregulated
percent.upregulated <- sum(genes$State == "up")/nrow(genes)*100
percent.upregulated

#Generating a Scatterplot 
plot <- 
  ggplot(genes) +
  aes(x = Condition1, y = Condition2, col = State) +
  geom_point()

plot + scale_color_manual(values = c("blue", "gray", "red")) +
  labs(title = "Gene Expression Changes Upon Drug Treatment",
       x = "Control (no drug)",
       y = "Drug Treatment"
       )
```

## Exploring gapminder dataset - Scatterplot
```{r}
library(gapminder)
library(dplyr)

#Filtering for 2007 Dataset 
gapminder_2007 <- gapminder %>% filter(year==2007)

#Plotting Life Expectancy vs. GDP Per Capita as of 2007 
ggplot(gapminder_2007) +
  aes(x = gdpPercap, y = lifeExp, col = continent, size = pop) +
  geom_point(alpha = 0.5) +
  labs(title = "Life Expectancy vs. GDP Per Capita in 2007",
       x = "GDP Per Capita",
       y = "Life Expectancy") +
  scale_size_continuous(name = "Population") +
  scale_color_discrete(name = "Continent") #These two lines reassign vector names

```

## Visualizing gapminder - Bar Graphs
```{r}
#Filtering by top 5 most populous countries in 2007
gapminder_top5 <- gapminder %>% 
  filter(year==2007) %>% 
  arrange(desc(pop)) %>% 
  top_n(5, pop)
gapminder_top5

#Generating Bar Graph
ggplot(gapminder_top5) +
  aes(x = reorder(country, -pop), y= pop, fill = gdpPercap) +
  geom_col(color = "gray30")

```

## Flipping Bar Charts using USArrests Dataset
```{r}
head(USArrests)

USArrests$State <- rownames(USArrests)

ggplot(USArrests) +
  aes(x=reorder(State, Murder), y=Murder) + #reorder states by murder rate
  geom_point() +
  geom_segment(aes(x = State,
               xend = State,
               y = 0,
               yend = Murder), color = "blue") +
  coord_flip()

```

## Using gganimate and gifski for animating dynamic plots
```{r}
library(gapminder)
library(gganimate)

# Setup nice regular ggplot of the gapminder data
ggplot(gapminder) +
  aes(x = gdpPercap, y = lifeExp, size = pop, colour = country) +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  scale_size(range = c(2, 12)) +
  scale_x_log10() +
  # Facet by continent
  facet_wrap(~continent) +
  # Here comes the gganimate specific bits
  labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
  transition_time(year) +
  shadow_wake(wake_length = 0.1)

```

## Combining Plots using patchwork()
```{r}
library(patchwork)

# Setup some example plots 
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))

# Use patchwork to combine them here:
(p1 | p2 | p3) / 
      p4
```
## Session Info!
```{r}
sessionInfo()

```
