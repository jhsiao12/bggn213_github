---
title: "Class 14"
author: "Jason Hsiao (PID: A15871650)"
format: pdf
toc: true
---

## Tidying input data

Importing Files
```{r}
# Import metadata and take a peak
colData = read.csv("GSE37704_metadata.csv", row.names = 1)
head(colData)

# Import countdata
countData = read.csv("GSE37704_featurecounts.csv", row.names = 1)
head(countData)

```

Cleaning Up Count Data
```{r}
# Removing length column from countData
countData <- as.matrix(countData[, -1])
head(countData)

# Filter count data where you have 0 read count across all samples.
counts <- subset(countData, rowSums(countData) > 0)
head(counts)

```

## Running DESeq2
```{r}
library(DESeq2)

dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design=~condition)
dds = DESeq(dds)

res = results(dds)

summary(res)
```
## QC with PCA
```{r}
pc <- prcomp(t(counts), scale = T)

summary(pc)

plot(pc$x[,1], pc$x[,2], col = as.factor(colData$condition), pch = 15)

```


## Volcano Plot 
```{r}
plot(res$log2FoldChange, -log10(res$padj))

# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col = mycols, xlab = "Log2(FoldChange)", ylab = "-Log(P-value)" )

```

## Adding Gene Annotation
```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys = row.names(res), 
                    keytype = "ENSEMBL",
                    column = "SYMBOL",
                    multiVals = "first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys = row.names(res),
                    keytype = "ENSEMBL",
                    column = "ENTREZID",
                    multiVals = "first")

res$name =   mapIds(org.Hs.eg.db,
                    keys = row.names(res),
                    keytype = "ENSEMBL",
                    column = "GENENAME",
                    multiVals = "first")

head(res, 10)

```
Writing Results into a CSV
```{r}
res = res[order(res$pvalue),]
write.csv(res, file = "deseq_results.csv")

```

## Pathway Analysis


```{r, message = FALSE}
library(pathview)
library(gage)
library(gageData)

# The gageData package has pre-compiled databases mapping genes to KEGG pathways and GO terms for common organisms. kegg.sets.hs is a named list of 229 elements. Each element is a character vector of member gene Entrez IDs for a single KEGG pathway.
data(kegg.sets.hs)

# The main gage() function requires a named vector of fold changes, where the names of the values are the Entrez gene IDs.

# Note that we used the mapIDs() function above to obtain Entrez gene IDs (stored in `res$entrez`) and we have the fold change results from DESeq2 analysis (stored in `res$log2FoldChange`).
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)

# Run the gage function!
keggres = gage(foldchanges, gsets = kegg.sets.hs)

```

Inspect keggres:
```{r}
attributes(keggres)

# Look at the first few down (less) pathways
head(keggres$less)

# Look at the first few up (greater) pathways
head(keggres$greater)

```

Putting this together in pathview in a diagram of cell cycle ONLY
```{r}
pathview(gene.data = foldchanges, pathway.id = "hsa04110")

```

Now, let's process our results a bit more to automagicaly pull out the top 5 upregulated pathways, then further process that just to get the pathway IDs needed by the `pathview()` function. We'll use these KEGG pathway IDs for pathview plotting below.
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids

#Graphing it...
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")

```


## Gene Ontology (GO) Pathway Analysis
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)

```

## Reactome Analysis 

First, Using R, output the list of significant genes at the 0.05 level as a plain text file:
```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))

write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)

```

Then, to perform pathway analysis online go to the Reactome website: (https://reactome.org/PathwayBrowser/#TOOL=AT). Select “choose file” to upload your significant gene list. Then, select the parameters “Project to Humans”, then click “Analyze”.

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

A: Cell Cycle!
![Most Significant Pathway](R-HSA-1640170.png) 

The most significant pathways are roughly similar, but not the exact same. The difference is probably from the way pathways are defined, and also the fundamental data structures of the respective pathway analyses are different.

## GO online

To perform Gene Set GO Enrichment online go to the website: http://www.geneontology.org/page/go-enrichment-analysis. Paste your significant gene list from section 4. Then, select "biological process" and "homo sapiens", and click submit.

> Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

A: "Unclassified". The most significant pathways don't really match KEGG results. The most significant pathways are roughly similar, but not the exact same. The difference is probably from the way pathways are defined, and also the fundamental data structures of the respective pathway analyses are different.


