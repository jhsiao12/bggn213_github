---
title: "Class 9"
author: "Jason Hsiao (PID: A15871650)"
format: pdf
---

## Importing Data and Preparing
```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)

# We can use -1 here to remove the first column so we don't have answers
wisc.data <- wisc.df[,-1]

# Create diagnosis vector to store answer for later
diagnosis <- as.factor(wisc.df$diagnosis)

```

> Q1. How many observations are in this dataset?

```{r}
nrow(wisc.data)

```

> Q2. How many of the observations have a malignant diagnosis?

```{r}
sum(diagnosis == "M")

```

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
length(grep("_mean", colnames(wisc.df)))

```

## Check column means and standard deviations
```{r}
colMeans(wisc.data)

apply(wisc.data, 2, sd)

```
## PCA
```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)

# Look at summary of results
summary(wisc.pr)

```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27%

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

PC3

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

PC7


## Interpreting PCA Results
```{r}
biplot(wisc.pr$x, wisc.pr$rotation)

```

> Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

Extremely difficult to understand, since all the numbers and words are overlapped and there is no meaningful value to this plot. 

We want to generate a better plot:
```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[, 1], wisc.pr$x[, 2], col = diagnosis, 
     xlab = "PC1", ylab = "PC2")

# Repeat for components 1 and 3
plot(wisc.pr$x[, 1], wisc.pr$x[, 3], col = diagnosis, 
     xlab = "PC1", ylab = "PC3")

```

Let's put this in ggplot2
```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col = diagnosis) + 
  geom_point()

```

## Variance Explained
```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)

```
## Scree Plot
```{r}
# Variance explained by each principal component: pve
total_sdev <- sum(pr.var)

# PVE 
pve <- pr.var / total_sdev

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")

# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )

## ggplot based graph using factoextra package
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)

```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
bar_centers <- barplot( wisc.pr$rotation[,1], las=2 )
text(x = bar_centers, 
     y = wisc.pr$rotation[,1],
     labels = round(wisc.pr$rotation[,1], 2),
     pos = 3, cex = 0.8)

```
-0.26


## Hierarchical Clustering
```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)

#Calculate the (Euclidean) distances between all pairs of observations in the new scaled dataset and assign the result to data.dist.
data.dist <- dist(data.scaled)

#Create a hierarchical clustering model using complete linkage. 
wisc.hclust <- hclust(data.dist, method = "ward.D2")

```

> Q10. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)

# Cut the dendrogram into 4 clusters
clusters <- cutree(wisc.hclust, k = 4)
abline(wisc.hclust, h = 32
       , col="red", lty=2)

```
32?

> Q12. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

Cluster dendrogram, provides a good visualization of where clustering occurs.

> Q13. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
wisc.pr.hclust <- hclust(dist(wisc.pr$x[, 1:7]), method="ward.D2")
grouped <- cutree(wisc.pr.hclust, k = 4)

#Visualizing as table
table(grouped, diagnosis)

```

Better! Groups 1/2 are more predictive of malignant and groups 3/4 are more predictive of benign. However, there are still many malignant specimens in groups 3/4.


> Q14. How well do the hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.

```{r}
#PCA then hierarchical clustering
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k = 2)
table(wisc.pr.hclust.clusters, diagnosis)

#hierarchical clustering (4 cluster)
table(grouped, diagnosis)

#kmeans
wisc.km <- kmeans(wisc.data, 2) #asking for 2 clusters
table(wisc.km$cluster, diagnosis)

```

PCA then hierarchical clustering appears to be the best

> Q16. Which of these new patients should we prioritize for follow up based on your results?

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc

g <- as.factor(wisc.pr.hclust.clusters)
levels(g)
## [1] "1" "2"
g <- relevel(g,2)
levels(g)
## [1] "2" "1"
# Plot using our re-ordered factor 
plot(wisc.pr$x[,1:2], col=g)

plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

Group 2, these are the malignant patients and get follow up